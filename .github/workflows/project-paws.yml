name: build-project-paws
run-name: Project-Paws - ${{ github.actor }} by ${{ github.event_name }} ${{ github.ref }}
on:
  push:
    branches:
      - "main"
    paths:
      - "/**"
      - "!INFO.md"
      - "!README.md"
      - "!LICENSE"
  pull_request:
    branches:
      - main
    paths:
      - "/**"
      - "!INFO.md"
      - "!LICENSE"
      - "!README.md"
  workflow_dispatch:
    inputs:
      release:
        description: "Is this a release?"
        required: true
        default: "false"
        options:
          - "true"
          - "false"
env:
  GITHUB_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    runs-on: arc-runner-set

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Registery
        uses: docker/login-action@v3
        id: github-registry
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Release Semantic Version
        uses: PaulHatch/semantic-version@v5.4.0
        id: version
        with:
          debug: true

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
          images: ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Echo Version
        run: echo "Version would be ${{ steps.version.outputs.version }} Increment: ${{ steps.version.outputs.increment }}"

      - name: Build and Push Docker PR
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Tag Release (vX.Y.Z)
        run: |
          git tag ${{ steps.version.outputs.version_tag }}
          git push origin ${{ steps.version.outputs.version_tag }}
